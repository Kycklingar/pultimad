package daemon

import (
	"log"

	yp "github.com/kycklingar/pultimad/parser"
	db "github.com/kycklingar/pultimad/storage"
)

func newQueue() *queue {
	var q queue
	q.task = make(chan task)
	return &q
}

type queue struct {
	name string
	task chan task
}

type task interface{}

func (q *queue) queueCreator(id int) {
	creator, err := yp.NewCreator(id)
	if err != nil {
		log.Println(err)
		return
	}

	q.task <- creator
}

func (q *queue) queueTask(tasks ...task) {
	for _, t := range tasks {
		q.task <- t
	}
}

func (q *queue) grabPosts(db *db.DB) error {
	creators, err := db.GetCreators(10)
	if err != nil {
		return err
	}

	for _, creator := range creators {
		q.task <- creator
	}

	return nil
}

func (q *queue) grabFiles(db *db.DB) error {
	files, err := db.GetPostFiles(20)
	if err != nil {
		return err
	}

	for _, file := range files {
		q.task <- file
	}

	return nil
}
